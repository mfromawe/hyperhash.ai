// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id            String   @id @default(cuid())
  email         String   @unique
  username      String?  @unique
  passwordHash  String?
  firstName     String?
  lastName      String?
  avatarUrl     String?
  
  // Email verification
  emailVerified    Boolean   @default(false)
  emailVerifiedAt  DateTime?
  verificationToken String?
  
  // Account status
  isActive      Boolean   @default(true)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  lastLoginAt   DateTime?
  
  // Subscription relationship
  subscription  Subscription?
  
  // Usage tracking
  usageStats    UsageStats[]
  
  // Authentication attempts
  loginAttempts Int @default(0)
  lockedUntil   DateTime?
  
  @@map("users")
}

model Subscription {
  id                String   @id @default(cuid())
  userId            String   @unique
  user              User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  planId            String   // 'free', 'pro', 'enterprise'
  status            String   @default("active") // 'active', 'canceled', 'expired'
  
  currentPeriodStart DateTime?
  currentPeriodEnd   DateTime?
  
  // Payment integration (Stripe)
  stripeCustomerId     String?
  stripeSubscriptionId String?
  stripePriceId        String?
  
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  
  @@map("subscriptions")
}

model UsageStats {
  id                String   @id @default(cuid())
  userId            String
  user              User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  monthYear         String   // Format: "2025-01"
  hashtagsGenerated Int      @default(0)
  apiCalls          Int      @default(0)
  
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  
  @@unique([userId, monthYear])
  @@map("usage_stats")
}

model PasswordResetToken {
  id        String   @id @default(cuid())
  email     String
  token     String   @unique
  expiresAt DateTime
  used      Boolean  @default(false)
  createdAt DateTime @default(now())
  
  @@map("password_reset_tokens")
}
